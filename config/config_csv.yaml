# Comprehensive configuration for embedding evaluation

#debug retreival
debug_retrieval_only: false


# 1. Data Source Configuration
data_source:
  type: pdf                                      # str: 'csv', 'oracle', 'json', 'txt', 'pdf'
  file: 'data/jesc112.pdf'                      # Path to the PDF file
  # PDF-specific settings
  pdf_config:
    extract_tables: true                        # Whether to extract tables from PDF
    include_metadata: true                      # Include PDF metadata in embeddings
    ocr_enabled: false                          # Enable OCR for scanned documents (if needed)

  # embed_columns: all                      # embed entire file
  # embed_columns: ["column1", "column2"]  # embed only these columns
  # For Oracle:
  # host: localhost
  # port: 1521
  # sid: XE
  # user: myuser
  # password: mypass
  # table: mytable

# 2. Embedding Parameters
embed_config:
  models: ["all-MiniLM-L6-v2"] #, "paraphrase-distilroberta-base-v1" ] # List of models to evaluate 
  default_model: "all-MiniLM-L6-v2"                  # Default model for single-model operations
  batch_size: 256                                    # Increased batch size
  normalize: true
  optimization:
    use_gpu: true
    half_precision: true
    num_workers: 8                                   # Number of CPU workers for data loading
  dimension: 384                                     # Target dimension after PCA if needed
  use_pca: true                                      # Whether to use PCA for dimension reduction
  pca_config:
    random_state: 42
    whiten: false                                    # Whether to scale the components to unit variance
  indexing_type: flat                                # str: 'flat', 'ivf', 'hnsw'
  normalize: true                                    # bool
  embedding_type: semantic                           # str: 'semantic', 'dense', 'sparse', 'hybrid'
  search_type: semantic                              # str: 'semantic', 'dense', 'sparse', 'hybrid'
  # For OpenAI/Cohere models, add api_key fields as needed
  # openai_api_key: sk-...
  # cohere_api_key: ...

# 3. Chunking Parameters
chunking:
  strategy: none              # str: 'none', 'sentence', 'sliding_window', 'fixed_length', 'paragraph'
  chunk_size: 1000               # int: Size of chunks (characters for fixed/sliding, target size for sentence/paragraph)
  overlap: 100                   # int: Overlap size for sliding window strategy
  delimiter: "\n\n"             # str: Delimiter for paragraph chunking
  combine_small_chunks: true    # bool: Whether to combine small chunks
  min_chunk_size: 100          # int: Minimum chunk size when combining
  sentence_options:
    language: english          # str: Language for sentence tokenization
    respect_breaks: true      # bool: Whether to respect line breaks
  advanced:
    normalize_whitespace: true   # bool: Clean up excessive whitespace
    preserve_line_breaks: false  # bool: Keep original line breaks in output
    smart_splitting: true       # bool: Try to split at semantic boundaries

# 4. Vector Database Connection Details
vector_db:
  type: qdrant                    # str: 'Milvus', 'Qdrant'
  host: localhost                 # str
  port: 6333                      # int (Milvus default) or 6333 (Qdrant default)
  collection: science_embeddings #flight_embeddings     # str
  batch_size: 300                 # int: batch size for DB insertion (default: 500)
  upsert_retries: 3               # int: number of retries for Qdrant upsert (default: 3)
  upsert_retry_delay: 2           # int: delay (seconds) between retries (default: 2)
  # Indexing configuration for Qdrant
  vector_index:
    type: hnsw                    # str: 'plain', 'hnsw', 'ivf', etc.
    params:
      m: 16                       # int: HNSW parameter (example)
      ef_construct: 256           # int: HNSW parameter (example)
  payload_index:
    - field: Origin
      type: keyword
    - field: FlightDate
      type: datetime
    - field: DepDelayMinutes
      type: float 
              
 
# 5. Retrieval & Evaluation Parameters
retrieval:
  enabled: true                   # bool
  top_k: 10                       # Increased for better recall
  score_threshold: 0.4          # Slightly lowered threshold for more results
  metric_type: COSINE            # str: 'L2', 'IP', 'COSINE', 'EUCLID', 'DOT'
  nprobe: 256                    # Increased for better search accuracy (Milvus)
  distance: COSINE               # str (Qdrant): 'COSINE', 'EUCLID', 'DOT'
  filter: ""                     # str: filter expression (if supported)
  semantic_query: "what is right thumb rule ? explain it" #"Find flights departing from Indianapolis International Airport (IND) on April 1st 2022 which experienced departure delays" # More specific query
  rerank_results: true          # Enable reranking for better relevance
  diversity_weight: 0.2         # Lowered to prioritize relevancerameter are shown in comments
  payload_filter:
    must:
      - key: "Origin"
        match:
          value: "IND"
      - key: "FlightDate"
        match:
          value: "2022-04-01"
  #    - key: "DepDelayMinutes"
  #      range:
  #        gte: 37
  order_by:
    - field: DepDelayMinutes
      order: desc
  #payload_filter:
    #origin: "IND"
    #DepDelayMinutes:
    #  gte: 1
    #FlightDate: 2022-04-01
      #gte: "2022-04-01"
      #lte: "2022-04-01"

evaluation:
  relevant_ids: [609,631,701,709] #[3294,1488,3297,3290,1418]       # list[int]: ground truth relevant ids
  metrics: [accuracy, recall, precision, f1]     # list[str]: metrics to compute

# Example values for each parameter are shown above. See app.py for allowed values.
